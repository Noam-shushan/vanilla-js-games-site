@import url('./base.css');

/* Path: styles\set-game.css */

.set-game-container {
    width: auto;
}

.set-bord {
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(3, 1fr);
    grid-gap: 1rem;
    padding: 1rem;
    max-height: 90vh;
    max-width: 90vw;
    background-color: aliceblue;
}

.card {
    border-radius: 5px;
    overflow: hidden;
    border: 1px solid rgba(22, 4, 4, 0.166);
    box-shadow: 10px 10px 10px #ccc;
}

.card img {
    object-fit: cover;
    height: 100%;
    width: 100%;
    border-radius: 5px;
}

.card:hover {
    transform: scale(1.05);
    cursor: pointer;
    transition: all 0.2s ease-in-out;
}

.selected {
    /* get shiny blue border */
    border: 2px solid #00BFFF;
    transition: all 0.2s ease-in-out;
}

.gameTools {
    background-color: #76b39d;
    border: none;
    color: white;
    padding: 12px 16px;
    font-size: 16px;
    cursor: pointer;
    margin-bottom: 5px;
    gap: 0.5rem;
    width: 100%;
}

#refteshBordBtn:active {
    border: #00BFFF;
}


@keyframes vibrate {
    0% {
        transform: rotate(0deg);
    }

    25% {
        transform: rotate(-3deg);
    }

    50% {
        transform: rotate(0deg);
    }

    75% {
        transform: rotate(3deg);
    }

    100% {
        transform: rotate(0deg);
    }
}

.vibrateCard {
    animation-name: vibrate;
    animation-duration: 0.3s;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
}

.vibrateCard:hover {
    border-color: red;
    cursor: pointer;
}

/* create animation that takes the selected card and replace it with the new card */
@keyframes replaceCard {
    0% {
        transform: scale(1);
    }

    50% {
        transform: scale(0.5);
    }

    100% {
        transform: scale(1);
    }
}

.replaceCard {
    animation-name: replaceCard;
    animation-duration: 0.6s;
    animation-iteration-count: 1;
    animation-timing-function: linear;
}

@keyframes growWhileSlideInLeft {
    0% {
        transform: translateX(100%) scale(0.3);
    }

    100% {
        transform: translateX(0%) scale(1);
    }
}

.growWhileSlideInLeft {
    animation-name: growWhileSlideInLeft;
    animation-duration: 1s;
    animation-iteration-count: 1;
    animation-timing-function: ease-out;
}

.row {  
    display: flex;
    flex-wrap: wrap;
  }

.side {
    flex: 35%;
    background-color: #3b3877;
    padding: 20px;
  }
  
  /* Main column */
  .main {
    flex: 65%;
    background-color: #24217a;
    padding: 20px;
  }
  
/* Responsive layout - when the screen is less than 700px wide, make the two columns stack on top of each other instead of next to each other */
@media screen and (max-width: 700px) {
    .row{   
      flex-direction: column;
    }
  }